{"ast":null,"code":"var _jsxFileName = \"/Users/rafaelbrigati/Desktop/aqua-pet-shop-client2/src/context/auth.context.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, createContext } from \"react\";\n// import axios from \"axios\";\nimport authMethods from \"../services/auth.service\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext();\nfunction AuthProviderWrapper(props) {\n  _s();\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n  const [isLoading, setIsLoading] = useState(true);\n  const [user, setUser] = useState(null);\n  const storeToken = token => {\n    //  <==  ADD\n    localStorage.setItem('authToken', token);\n  };\n  const authenticateUser = () => {\n    //  <==  ADD  \n    // Get the stored token from the localStorage\n    const storedToken = localStorage.getItem('authToken');\n\n    // If the token exists in the localStorage\n    if (storedToken) {\n      // We must send the JWT token in the request's \"Authorization\" Headers\n      authMethods.verifyToken(storedToken).then(userPayload => {\n        // Update state variables        \n        setIsLoggedIn(true);\n        setIsLoading(false);\n        setUser(userPayload);\n      }).catch(error => {\n        // If the server sends an error response (invalid token) \n        // Update state variables         \n        setIsLoggedIn(false);\n        setIsLoading(false);\n        setUser(null);\n      });\n    } else {\n      // If the token is not available (or is removed)\n      setIsLoggedIn(false);\n      setIsLoading(false);\n      setUser(null);\n    }\n  };\n  const removeToken = () => {\n    // <== ADD\n    // Upon logout, remove the token from the localStorage\n    localStorage.removeItem(\"authToken\");\n  };\n  const logOutUser = () => {\n    // <== ADD    \n    // To log out the user, remove the token\n    removeToken();\n    // and update the state variables    \n    authenticateUser();\n  };\n  useEffect(() => {\n    authenticateUser(); //  <==  ADD\n  }, []);\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: {\n      isLoggedIn,\n      isLoading,\n      user,\n      setUser,\n      storeToken,\n      authenticateUser,\n      logOutUser\n    },\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 5\n  }, this);\n}\n_s(AuthProviderWrapper, \"/wkMYUExdyWtGyjS2AwugXhX2sw=\");\n_c = AuthProviderWrapper;\nexport { AuthProviderWrapper, AuthContext };\nvar _c;\n$RefreshReg$(_c, \"AuthProviderWrapper\");","map":{"version":3,"names":["React","useState","useEffect","createContext","authMethods","jsxDEV","_jsxDEV","AuthContext","AuthProviderWrapper","props","_s","isLoggedIn","setIsLoggedIn","isLoading","setIsLoading","user","setUser","storeToken","token","localStorage","setItem","authenticateUser","storedToken","getItem","verifyToken","then","userPayload","catch","error","removeToken","removeItem","logOutUser","Provider","value","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/rafaelbrigati/Desktop/aqua-pet-shop-client2/src/context/auth.context.js"],"sourcesContent":["import React, { useState, useEffect, createContext } from \"react\";\n// import axios from \"axios\";\nimport authMethods from \"../services/auth.service\";\n \nconst AuthContext = createContext();\n \nfunction AuthProviderWrapper(props) {\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n  const [isLoading, setIsLoading] = useState(true);\n  const [user, setUser] = useState(null);\n  \n  const storeToken = (token) => {       //  <==  ADD\n    localStorage.setItem('authToken', token);\n  }\n\n  const authenticateUser = () => {           //  <==  ADD  \n    // Get the stored token from the localStorage\n    const storedToken = localStorage.getItem('authToken');\n    \n    // If the token exists in the localStorage\n    if (storedToken) {\n      // We must send the JWT token in the request's \"Authorization\" Headers\n      authMethods.verifyToken(storedToken)\n      .then((userPayload) => {\n      \n       // Update state variables        \n        setIsLoggedIn(true);\n        setIsLoading(false);\n        setUser(userPayload);        \n      })\n      .catch((error) => {\n        // If the server sends an error response (invalid token) \n        // Update state variables         \n        setIsLoggedIn(false);\n        setIsLoading(false);\n        setUser(null);        \n      });      \n    } else {\n      // If the token is not available (or is removed)\n        setIsLoggedIn(false);\n        setIsLoading(false);\n        setUser(null);      \n    }   \n  }\n\n  const removeToken = () => {                    // <== ADD\n    // Upon logout, remove the token from the localStorage\n    localStorage.removeItem(\"authToken\");\n  }\n \n \n  const logOutUser = () => {                   // <== ADD    \n    // To log out the user, remove the token\n    removeToken();\n    // and update the state variables    \n    authenticateUser();\n  }  \n \n  \n  useEffect(() => {                                    \n    authenticateUser();                   //  <==  ADD\n   }, []);\n\n  return (\n    <AuthContext.Provider value={{ isLoggedIn, isLoading, user, setUser, storeToken, authenticateUser, logOutUser }}>\n      {props.children}\n    </AuthContext.Provider>\n  )\n}\n \nexport { AuthProviderWrapper, AuthContext };"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,EAAEC,aAAa,QAAQ,OAAO;AACjE;AACA,OAAOC,WAAW,MAAM,0BAA0B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnD,MAAMC,WAAW,gBAAGJ,aAAa,CAAC,CAAC;AAEnC,SAASK,mBAAmBA,CAACC,KAAK,EAAE;EAAAC,EAAA;EAClC,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGX,QAAQ,CAAC,KAAK,CAAC;EACnD,MAAM,CAACY,SAAS,EAAEC,YAAY,CAAC,GAAGb,QAAQ,CAAC,IAAI,CAAC;EAChD,MAAM,CAACc,IAAI,EAAEC,OAAO,CAAC,GAAGf,QAAQ,CAAC,IAAI,CAAC;EAEtC,MAAMgB,UAAU,GAAIC,KAAK,IAAK;IAAQ;IACpCC,YAAY,CAACC,OAAO,CAAC,WAAW,EAAEF,KAAK,CAAC;EAC1C,CAAC;EAED,MAAMG,gBAAgB,GAAGA,CAAA,KAAM;IAAY;IACzC;IACA,MAAMC,WAAW,GAAGH,YAAY,CAACI,OAAO,CAAC,WAAW,CAAC;;IAErD;IACA,IAAID,WAAW,EAAE;MACf;MACAlB,WAAW,CAACoB,WAAW,CAACF,WAAW,CAAC,CACnCG,IAAI,CAAEC,WAAW,IAAK;QAEtB;QACCd,aAAa,CAAC,IAAI,CAAC;QACnBE,YAAY,CAAC,KAAK,CAAC;QACnBE,OAAO,CAACU,WAAW,CAAC;MACtB,CAAC,CAAC,CACDC,KAAK,CAAEC,KAAK,IAAK;QAChB;QACA;QACAhB,aAAa,CAAC,KAAK,CAAC;QACpBE,YAAY,CAAC,KAAK,CAAC;QACnBE,OAAO,CAAC,IAAI,CAAC;MACf,CAAC,CAAC;IACJ,CAAC,MAAM;MACL;MACEJ,aAAa,CAAC,KAAK,CAAC;MACpBE,YAAY,CAAC,KAAK,CAAC;MACnBE,OAAO,CAAC,IAAI,CAAC;IACjB;EACF,CAAC;EAED,MAAMa,WAAW,GAAGA,CAAA,KAAM;IAAqB;IAC7C;IACAV,YAAY,CAACW,UAAU,CAAC,WAAW,CAAC;EACtC,CAAC;EAGD,MAAMC,UAAU,GAAGA,CAAA,KAAM;IAAoB;IAC3C;IACAF,WAAW,CAAC,CAAC;IACb;IACAR,gBAAgB,CAAC,CAAC;EACpB,CAAC;EAGDnB,SAAS,CAAC,MAAM;IACdmB,gBAAgB,CAAC,CAAC,CAAC,CAAmB;EACvC,CAAC,EAAE,EAAE,CAAC;EAEP,oBACEf,OAAA,CAACC,WAAW,CAACyB,QAAQ;IAACC,KAAK,EAAE;MAAEtB,UAAU;MAAEE,SAAS;MAAEE,IAAI;MAAEC,OAAO;MAAEC,UAAU;MAAEI,gBAAgB;MAAEU;IAAW,CAAE;IAAAG,QAAA,EAC7GzB,KAAK,CAACyB;EAAQ;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACK,CAAC;AAE3B;AAAC5B,EAAA,CA9DQF,mBAAmB;AAAA+B,EAAA,GAAnB/B,mBAAmB;AAgE5B,SAASA,mBAAmB,EAAED,WAAW;AAAG,IAAAgC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}